# name: Build
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build:
#     name: Build
#     strategy:
#       matrix:
#         tags: [ARM64]
#     runs-on: [self-hosted, '${{ matrix.tags }}']
#     env:
#       BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Install sonar-scanner and build-wrapper
#         id: sonar-setup
#         uses: SonarSource/sonarcloud-github-c-cpp@vp/nativeCli
#       - name: Run build-wrapper
#         env:
#           BW: ${{ steps.sonar-setup.outputs.build-wrapper-binary }}
#         run: |
#           autoreconf --install
#           ./configure
#           "$BW" --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make clean all
#       - name: Run sonar-scanner
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Put the name of your token here
#         run: |
#           sonar-scanner -X --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"

name: SonarCloud Linux X64
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  linux_x64:
    name: Build and analyze X64
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@vp/nativeCli
      - name: Run build-wrapper
        run: |
          autoreconf --install
          ./configure
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make clean all
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"


  linux-arm64:
    name: Build and analyze ARM64
    runs-on: [self-hosted, ARM64]
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@vp/nativeCli
      - name: Run build-wrapper
        run: |
          autoreconf --install
          ./configure
          build-wrapper-linux-aarch64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make clean all
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"
